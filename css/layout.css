/* ------------------------------------------------- */
/* Layout                                            */
/* ------------------------------------------------- */

.grid-container {
  display: grid;
  text-align: center;
  /* shorthand: align-items justify-content */
  place-items: center;
  /* same as place-items for align all content */
  /* place-content: center; */
  padding-inline: 1rem;
  padding-bottom: 4rem;
}

.grid-container p:not([class]) {
  max-width: 50ch;
}

.numbered-title {
  grid-area: title;
}

/* destination layout */

.grid-container--destination {
  --flow-space: 2rem;
  grid-template-areas:
    "title"
    "image"
    "tabs"
    "content";
}

.grid-container--destination > picture {
  grid-area: image;
  max-width: 60%;
}

.grid-container--destination>.tab-list {
  grid-area: tabs;
}

.grid-container--destination>.destination-info {
  grid-area: content;
}

.destination-meta {
  flex-direction: column;
  border-top: 1px solid hsl(var(--clr-white) / .1);
  padding-top: 2.5rem;
  margin-top: 2.5rem;
}

.destination-meta p {
  font-size: 1.75rem;
}

/* crew layout */

.grid-container--crew {
  grid-template-areas: 
    "title"
    "image"
    "dots"
    "content";
}

.grid-container--crew h2 {
  color: hsl( var(--clr-white) / .5);
}

.grid-container--crew > picture {
  grid-area: image;
  max-width: 60%;
  border-bottom: 1px solid hsl( var(--clr-white) / .5);
}

.grid-container--crew > .dot-indicators {
  grid-area: dots;
}

.grid-container--crew > .crew-details {
  grid-area: content;
}

.crew-info {
  margin-top: 1rem;
}


@media (min-width: 35rem) {
  .grid-container--crew {
    padding-bottom: 0;
    --flow-space: 2rem;
    grid-template-areas: 
      "title"
      "content"
      "dots"
      "image";
  }

  .numbered-title {
    justify-self: start;
    margin-top: 2rem;
  }

  .destination-meta {
    flex-direction: row;
    justify-content: space-evenly;
  }

}

@media (min-width: 45rem) {
  .grid-container {
    text-align: left;
    /* use 2rem here, for other uses set --container-gap with inline css */
    column-gap: var(--container-gap, 2rem);
    grid-template-columns: minmax(1rem, 1fr) repeat(2, minmax(0, 30rem)) minmax(1rem,
        1fr);
  }

  .grid-container--home {
    /* another solution max(first-value, second-value) so it takes max value of them */
    /* padding-bottom: max(10vw, 150px); : At least 10vw or 150px */
    padding-bottom: max(6rem, 20vh);
    /* padding-bottom: 6rem; */
    align-items: end;
  }

  .grid-container--home>*:first-child {
    grid-column: 2;
  }

  .grid-container--home>*:last-child {
    grid-column: 3;
  }

  .grid-container--destination {
    justify-items: start;
    align-content: start;
    grid-template-areas:
      ". title title ."
      ". image tabs ."
      ". image content .";
  }
  
    .grid-container--destination > picture {
      max-width: 90%;
  }

  .destination-meta {
    --gap: min(6vw, 6rem);
    justify-content: flex-start;
  }

  .grid-container--crew {
    grid-template-areas:
      ". title image ."
      ". content image ."
      ". dots image .";
  }

  .grid-container--crew > picture {
    max-width: 90%;
    align-self: end;
  }

  .grid-container--crew > .dot-indicators {
    justify-self: start;
  }
}